apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

apply from: 'pqPlugin.gradle'

pq {
    nameMap { name ->
        println 'hello, ' + name
        return name
    }
    destDir 'pq-distribution-directory'
}

apply plugin: 'com.fooww.gradle.plugin'

task assembleChannel {
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def variantName = variant.name.capitalize()
            println "---" + variantName
            // 只给冠名打包加固
            if (variantName.contains("Release") && !variantName.contains("Fooww")) {
                dependsOn("assemble${variantName}Package")
            }
        }
    }
}
assembleChannel.group = 'fooww'
assembleChannel.description = '冠名打包加固'

packageConfig {
    appVersion = '1.0'
    username = '18017001513'
    password = 'teRqZyGXAPJfZj7'
    keystorePath = './app/key-store.jks'
    keystorePassword = STORE_PASSWORD
    keystoreAlias = KEY_ALIAS
    keystoreAliasPassword = KEY_PASSWORD
    outputPath = './app/build/outputs/jiagu'
}

static def releaseTime() {
    return new Date().format("MM.dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.harry.custom_android"
        minSdkVersion 23
        //noinspection OldTargetApi
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        flavorDimensions "default"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                def newApkName = "${project.name}_${variant.flavorName}_v${defaultConfig.versionName}_${variant.buildType.name}_${releaseTime()}.apk"
                outputFileName = newApkName
            }
        }
    }

    productFlavors {
        first {

        }

        second {

        }

        third {

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //签名配置
    signingConfigs {
        release {
            storeFile file(STORE_FILE)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            v2SigningEnabled = true
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'

    implementation 'com.facebook.fresco:fresco:1.7.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    implementation('com.squareup.retrofit2:converter-simplexml:2.1.0') {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
    }

    implementation 'org.greenrobot:greendao:3.2.2'

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    // 代码高亮
    // implementation 'thereisnospon.codeview:codeview:0.3.1'

    implementation project(':BaseTabBar')
    implementation project(':BottomBar')
    implementation project(':ExpandView')
    implementation project(':image')
    implementation project(':ClearEditText')
}
